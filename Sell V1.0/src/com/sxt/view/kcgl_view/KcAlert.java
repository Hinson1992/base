/*
 * StorehouseAlert.java
 *
 * Created on __DATE__, __TIME__
 */

package com.sxt.view.kcgl_view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

import com.sxt.dao.factory.DaoFactory;
import com.sxt.view.table.model.KcpdTableModel;

/**
 * 
 * @author __USER__
 */
public class KcAlert extends JDialog {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private KcpdTableModel stmd;
	private static Vector<Vector> vector = DaoFactory.getKcDao().goodsInquiry();
	private static Properties pro = new Properties();
	private static File propertyFile = new File(
			"F:\\ECLIPSE\\Sell1.0\\config\\alertvalue.properties");

	// 预加载读取配置文件
	static {
		OutputStream out = null;
		if (!propertyFile.exists()) {
			// 将预警值和商品ID保存为配置文件
			// 如果不存在,则创建配置文件
			try {
				propertyFile.createNewFile();
				for (int i = 0; i < vector.size(); i++) {
					pro.setProperty(vector.get(i).get(0).toString(),
							Integer.toString(0));
					out = new FileOutputStream(propertyFile);
					pro.store(out, "库存预警");
				}
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			} finally {
				try {
					out.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}

	/** Creates new form StorehouseAlert */
	public KcAlert(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowOpened(WindowEvent e) {
				setJtable(jtable, pro);
				repaint();
			}
		});
		initComponents();
		setSize(800, 500);
		setLocationRelativeTo(null);
		setVisible(true);
	}

	public KcAlert() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jtable = new JTable();
		setJtable(jtable, pro);
			
		// 添加事件 打开新会话 并将新会话修改的预警值保存到配置文件里
		jtable.addMouseListener(new MouseAdapter() {

			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				if (e.getClickCount() == 2
						&& jtable.isRowSelected(jtable.getSelectedRow())) {
					KcAlertDialog st = new KcAlertDialog(vector.get(jtable
							.getSelectedRow()));
					if (!st.isVisible()) {
						setJtable(jtable, pro);
						repaint();
						}
					}
				
			}

		});
		jScrollPane1 = new javax.swing.JScrollPane(jtable);
		jScrollPane1.setPreferredSize(new Dimension(600, 300));
		jScrollPane1
				.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		jButton1 = new JButton("库存预警");
		jButton1.setPreferredSize(new Dimension(100, 40));
		//点击按键会重新刷新库存预警出现的信息
		jButton1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				setJtable(jtable, pro);
				repaint();
			}
		});
		JLabel label = new JLabel("  Tips:请双击选中信息行进行库存预警值的修改。");
		label.setForeground(Color.RED);
		label.setFont(new Font("宋体", Font.PLAIN, 15));
		
		StoreJsearchBar sjb1 = new StoreJsearchBar();
		sjb1.add(jButton1);
		sjb1.add(label);		
		jPanel1.add(sjb1);
		jPanel1.setLayout(new FlowLayout());

		getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);
		
		jPanel2.setLayout(new FlowLayout());

		getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

		getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

		pack();
	}// </editor-fold>
		// GEN-END:initComponents

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				KcAlert dialog = new KcAlert(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
			}
		});
	}

	// 
	@SuppressWarnings("unchecked")
	private void setJtable(JTable jtable, Properties pro) {
		String[] head = { "商品编号", "商品名称", "产地", "商品计量单位", "商品规格", "包装类型", "单价",
				"当前库存", "最低库存" };
		stmd = new KcpdTableModel(head);
		Vector alertVt = new Vector();
		InputStream input = null;
		try {
			input = new FileInputStream(propertyFile);
			pro.load(input);
			for (int i = 0; i < vector.size(); i++) {
				alertVt.add(pro.get(vector.get(i).get(0)));
			}
		} catch (FileNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				input.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		for (int i = 0; i < vector.size(); i++) {
			if (vector.get(i).size() == 8) {
				vector.get(i).add(alertVt.get(i));
			} else {
				vector.get(i).setElementAt(alertVt.get(i), 8);
			}
			}
		/*System.out.println(vector);*/
		for (int i = 0; i < vector.size(); i++) {
			int value = Integer.parseInt(vector.get(i).get(7).toString());
			int alertValue = Integer.parseInt(pro.get(vector.get(i).get(0))
					.toString());
			 /*System.out.println(value+" "+alertValue);*/
			 if (value > alertValue) {
			   vector.remove(i); 
			 }
		}
		stmd.setdata(vector);
		jtable.setModel(stmd);
		repaint();
	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JButton jButton1;
	private JTable jtable;
	private javax.swing.JScrollPane jScrollPane1;

	// End of variables declaration//GEN-END:variables

}